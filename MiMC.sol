// SPDX-License-Identifier: MIT
pragma solidity 0.8.17;

contract MiMC {
    
    uint256 p = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
    uint8 nRounds = 10;
    uint256[10] c = [
        0,
        37687659829957300372198967772721067328531572190411988163877648911468998362384,
        106975534816242949434986365031482802563390618842212557894873756031741344354399,
        62891455389696918132768800910624083306173878425313281634486752555724039361396,
        5211254994977189128068839812545693930189157208720327236063835235444789223504,
        57001070451412694415823885468770940556191482134336948684258481928333790878676,
        40764556525306313348737443291387303801156472525503111640776167870509656458675,
        32821371530250192526560906138181139858153663113542705615005935671670232044249,
        28602421302443991030534121118356828018039620393440445729962569931036536374942,
        87074520513835390725626994413777416746386170424523391192970966912837762110425
    ];

    function MiMC5(uint256 x, uint256 k) public view returns(uint256 h) {
        uint256 lastOutput = x;

        uint256 base;
        uint256 base2;
        uint256 base4;

        for(uint8 i = 0; i < nRounds; i++){
            base = addmod(lastOutput, k, p);
            base = addmod(base, c[i], p);
            
            base2 = mulmod(base, base, p);
            base4 = mulmod(base2, base2, p);

            lastOutput = mulmod(base4, base, p);
        }

        h = addmod(lastOutput, k, p);
    }
}
